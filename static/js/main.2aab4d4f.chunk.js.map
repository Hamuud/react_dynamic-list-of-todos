{"version":3,"sources":["api.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoInfo","todo","todoModal","handleTodoOpen","isSuccess","completed","className","id","classNames","title","type","onClick","TodoList","todos","setTodo","setTodoModal","userId","user","map","TodoFilter","query","onChange","sortValue","onSort","value","event","target","placeholder","style","pointerEvents","Loader","TodoModal","selectedTodo","setSelectedTodo","href","email","name","App","useState","setTodos","setQuery","sort","setSort","useEffect","todosFromServer","filteredTodos","useMemo","filter","filtered","toLowerCase","includes","trim","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2aab4d4f.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  todoModal: boolean;\n  handleTodoOpen: (todo: Todo) => void;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n  todoModal,\n  handleTodoOpen,\n}) => {\n  const isSuccess = todo.completed;\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {isSuccess\n        && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !isSuccess,\n          'has-text-success': isSuccess,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => handleTodoOpen(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames('far', {\n              'fa-eye': !todoModal,\n              'fa-eye-slash': todoModal,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { PrepaparedTodo } from '../../types/PreparedTodo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n  setTodo: (todo: PrepaparedTodo | null) => void;\n  todoModal: boolean;\n  setTodoModal: (todoModal: boolean) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setTodo,\n  todoModal,\n  setTodoModal,\n}) => {\n  const handleTodoOpen = (todo: Todo) => {\n    setTodoModal(true);\n    getUser(todo.userId).then(user => setTodo({\n      ...todo,\n      user,\n    }));\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n            todoModal={todoModal}\n            handleTodoOpen={handleTodoOpen}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  onChange: (query: string) => void;\n  sortValue: string;\n  onSort: (sort: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onChange,\n  sortValue,\n  onSort,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={sortValue}\n          onChange={(event) => onSort(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {\n          query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onChange('')}\n            />\n          )\n        }\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { PrepaparedTodo } from '../../types/PreparedTodo';\n\ntype Props = {\n  selectedTodo: PrepaparedTodo | null;\n  setSelectedTodo: (selectedTodo: PrepaparedTodo | null) => void;\n  setTodoModal: (todoModal: boolean) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n  setTodoModal,\n}) => {\n  const handleCloseModal = () => {\n    setTodoModal(false);\n    setSelectedTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {\n        !selectedTodo ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={handleCloseModal}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${selectedTodo.user.email}`}>\n                  {selectedTodo?.user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { PrepaparedTodo } from './types/PreparedTodo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState('all');\n  const [selectedTodo, setSelectedTodo] = useState<PrepaparedTodo | null>(null);\n  const [todoModal, setTodoModal] = useState(false);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  const filteredTodos = useMemo(() => (\n    todos.filter(todo => {\n      const filtered = todo.title.toLowerCase().includes(query.toLowerCase().trim());\n\n      switch (sort) {\n        case 'active':\n          return filtered && !todo.completed;\n        case 'completed':\n          return filtered && todo.completed;\n        default:\n          return filtered;\n      }\n    })), [todos, sort, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onChange={setQuery}\n                sortValue={sort}\n                onSort={setSort}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n\n              <TodoList\n                todos={filteredTodos}\n                setTodo={setSelectedTodo}\n                todoModal={todoModal}\n                setTodoModal={setTodoModal}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        todoModal && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            setSelectedTodo={setSelectedTodo}\n            setTodoModal={setTodoModal}\n          />\n        )\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}