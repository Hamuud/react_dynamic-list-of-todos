{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoList","todos","setTodo","todoModal","setTodoModal","handleTodoOpen","todo","userId","user","className","map","isSuccess","completed","id","classNames","title","type","onClick","TodoFilter","query","setQuery","sort","setSort","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","selectedTodo","setSelectedTodo","href","email","name","App","useState","setTodos","useEffect","todosFromServer","JSON","stringify","filteredTodos","filter","filtered","toLowerCase","includes","trim","visibleTodos","useMemo","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe0b0986.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { PrepaparedTodo } from '../../types/PreparedTodo';\n\ntype Props = {\n  todos: Todo[];\n  setTodo: (todo: PrepaparedTodo | null) => void;\n  todoModal: boolean;\n  setTodoModal: (todoModal: boolean) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setTodo,\n  todoModal,\n  setTodoModal,\n}) => {\n  const handleTodoOpen = (todo: Todo) => {\n    setTodoModal(true);\n    getUser(todo.userId).then(user => setTodo({\n      ...todo,\n      user,\n    }));\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const isSuccess = todo.completed;\n\n          return (\n            <tr data-cy=\"todo\" className=\"\">\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {isSuccess\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !isSuccess,\n                  'has-text-success': isSuccess,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleTodoOpen(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far', {\n                      'fa-eye': !todoModal,\n                      'fa-eye-slash': todoModal,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  setQuery: (query: string) => void;\n  sort: string;\n  setSort: (sort: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  sort,\n  setSort,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={sort}\n          onChange={(event) => setSort(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {\n          query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )\n        }\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { PrepaparedTodo } from '../../types/PreparedTodo';\n\ntype Props = {\n  selectedTodo: PrepaparedTodo | null;\n  setSelectedTodo: (selectedTodo: PrepaparedTodo | null) => void;\n  setTodoModal: (todoModal: boolean) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n  setTodoModal,\n}) => {\n  const handleCloseModal = () => {\n    setTodoModal(false);\n    setSelectedTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {\n        !selectedTodo ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={handleCloseModal}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${selectedTodo.user.email}`}>\n                  {selectedTodo?.user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { PrepaparedTodo } from './types/PreparedTodo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState('all');\n  const [selectedTodo, setSelectedTodo] = useState<PrepaparedTodo | null>(null);\n  const [todoModal, setTodoModal] = useState(false);\n  //  const [selectedTodosName, setSelecetedTodosName] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, [JSON.stringify(getTodos())]);\n\n  const filteredTodos = todos.filter(todo => {\n    const filtered = todo.title.toLowerCase().includes(query.toLowerCase().trim());\n\n    switch (sort) {\n      case 'active':\n        return filtered && !todo.completed;\n      case 'completed':\n        return filtered && todo.completed;\n      default:\n        return filtered;\n    }\n  });\n\n  const visibleTodos = useMemo(\n    () => filteredTodos,\n    [JSON.stringify(filteredTodos)],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                sort={sort}\n                setSort={setSort}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                setTodo={setSelectedTodo}\n                todoModal={todoModal}\n                setTodoModal={setTodoModal}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        todoModal && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            setSelectedTodo={setSelectedTodo}\n            setTodoModal={setTodoModal}\n          />\n        )\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}